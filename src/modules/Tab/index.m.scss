@use 'utils/scss/index';
@use 'utils/scss/color';

@property --houdini-bg-color {
  syntax: '<color>';
  inherits: false;
  initial-value: #fff;
}

.content {
  @extend %card;
  display: flex;
  flex-direction: column;

  .window-title {
    @extend %sub-title;
    position: relative;
    display: flex;
    justify-content: space-between;

    .buttons {
      @extend %btn-close, %sub-title;
      font-size: 1rem;
    }

    &:hover .buttons {
      opacity: 1;
    }
  }

  .list-wp {
    flex: 1;
    overflow: auto;
  }

  .list {
    position: relative;
  }

  .label {
    position: absolute;
    right: 0;
    left: 0;
    transition: top ease 0.1s;
    will-change: top;
    @extend %label;

    .unit-tab {
      display: flex;
      align-items: center;
    }

    .btn-close {
      @include color.prop(
        background,
        linear-gradient(to right, transparent, color.light('bg')),
        linear-gradient(to right, transparent, color.dark('bg'))
      );
    }

    &.activated {
      margin: 0 0.3rem;
      border-radius: 0.3rem;
      @include color.prop(background-color, color.dark('gray-1'), color.dark('gray-5'));
      transition: background-color ease 0.4s;

      .unit-tab {
        padding-left: 0.7rem;
      }
      .btn-close {
        @include color.prop(--houdini-bg-color, color.dark('gray-1'), color.dark('gray-5'));
        background: linear-gradient(to right, transparent, var(--houdini-bg-color));
        border-radius: 0.3rem;
        transition: --houdini-bg-color ease 0.4s;
      }

      &:hover {
        @include color.prop(background-color, color.dark('gray-2'), color.dark('gray-6'));

        .btn-close {
          @include color.prop(--houdini-bg-color, color.dark('gray-2'), color.dark('gray-6'));
        }
      }
    }
    &-selected {
      @include color.auto(background-color, 'blue-4');
    }

    &-selected.activated {
      margin: 0;
      border-radius: 0;
      @include color.auto(background-color, 'blue-5');
    }
  }

  .focused {
    .activated .buttons {
      @include color.prop(
        background,
        linear-gradient(to right, transparent, color.light('btn-text')),
        linear-gradient(to right, transparent, color.dark('btn-text'))
      );
    }
  }
}

.darg-hover {
  @include color.auto(background-color, 'blue-5');
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  transition: top ease 0.2s;
  pointer-events: none;
}

.trans-top {
  transition: top ease 0.1s;
}

.tree-img {
  flex-shrink: 0;
  width: 18px;
  height: 32px;
  vertical-align: middle;
  @include color.auto(fill, 'bg-hl');
}

.unit-tab span[role='link'] {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;

  :global(#popup) &{
    min-width: 300px;
  }
}
